{"version":3,"sources":["script.js"],"names":["tl","gsap","timeline","fromTo","opacity","y","duration","ease","stagger","w","h","canvas","document","getElementById","c","getContext","setCanvasExtents","body","clientWidth","clientHeight","width","height","window","onresize","makeStars","count","out","i","s","x","Math","random","z","push","stars","myGradient","createLinearGradient","addColorStop","prevTime","clear","fillStyle","fillRect","putPixel","brightness","intensity","rgb","moveStars","distance","length","init","time","requestAnimationFrame","tick","elapsed","cx","cy","star","d"],"mappings":"AAAA,aAAA,IAAMA,GAAKC,KAAKC,WAIhBF,GAAGG,OACD,WACA,CAAEC,QAAS,EAAGC,EAAG,IACjB,CAAED,QAAS,EAAGE,SAAU,IAAKD,EAAG,EAAGE,KAAM,aAAcC,QAAS,KAKlE,IAGIC,EACAC,EAJEC,OAASC,SAASC,eAAe,UACjCC,EAAIH,OAAOI,WAAW,MAKtBC,iBAAmB,WACvBP,EAAIG,SAASK,KAAKC,YAClBR,EAAIE,SAASK,KAAKE,aAClBR,OAAOS,MAAQX,EACfE,OAAOU,OAASX,GAGlBM,mBAEAM,OAAOC,SAAW,WAChBP,oBAGF,IAAMQ,UAAY,SAAAC,GAEhB,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAC9B,IAAMC,EAAI,CACRC,EAAmB,KAAhBC,KAAKC,SAAkB,IAC1B1B,EAAmB,IAAhByB,KAAKC,SAAiB,IACzBC,EAAmB,IAAhBF,KAAKC,UAEVL,EAAIO,KAAKL,GAEX,OAAOF,GAGLQ,MAAQV,UAAU,KAClBW,WAAarB,EAAEsB,qBAAqB,EAAG,IAAM,GAAI,KACrDD,WAAWE,aAAa,EAAG,WAC3BF,WAAWE,aAAa,EAAG,WAE3B,IAuBIC,SAvBEC,MAAQ,WACZzB,EAAE0B,UAAYL,WACdrB,EAAE2B,SAAS,EAAG,EAAG9B,OAAOS,MAAOT,OAAOU,SAGlCqB,SAAW,SAACb,EAAGxB,EAAGsC,GACtB,IAAMC,EAAyB,IAAbD,EACZE,EAAM,OAASD,EAAY,IAAMA,EAAY,IAAMA,EAAY,IACrE9B,EAAE0B,UAAYK,EACd/B,EAAE2B,SAASZ,EAAGxB,EAAG,EAAG,IAGhByC,UAAY,SAAAC,GAEhB,IADA,IAAMtB,EAAQS,MAAMc,OACXrB,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAC9B,IAAMC,EAAIM,MAAMP,GAEhB,IADAC,EAAEI,GAAKe,EACAnB,EAAEI,GAAK,GACZJ,EAAEI,GAAK,MAMPiB,KAAO,SAAAC,GACXZ,SAAWY,EACXC,sBAAsBC,OAGlBA,KAAO,SAAPA,EAAOF,GACX,IAAIG,EAAUH,EAAOZ,SACrBA,SAAWY,EAEXJ,UAAoB,IAAVO,GAEVd,QAMA,IAJA,IAAMe,EAAK7C,EAAI,EACT8C,EAAK7C,EAAI,EAETe,EAAQS,MAAMc,OACXrB,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAC9B,IAAM6B,EAAOtB,MAAMP,GAEbE,EAAIyB,EAAKE,EAAK3B,GAAc,KAAT2B,EAAKxB,GACxB3B,EAAIkD,EAAKC,EAAKnD,GAAc,KAATmD,EAAKxB,GAE9B,KAAIH,EAAI,GAAKA,GAAKpB,GAAKJ,EAAI,GAAKA,GAAKK,GAArC,CAIA,IAAM+C,EAAID,EAAKxB,EAAI,IAGnBU,SAASb,EAAGxB,EAFF,EAAIoD,EAAIA,IAKpBN,sBAAsBC,IAGxBD,sBAAsBF","file":"script.js","sourcesContent":["const tl = gsap.timeline();\r\n\r\n/* HERO TEXT ANIMATION  */\r\n\r\ntl.fromTo(\r\n  \".stagger\",\r\n  { opacity: 0, y: 20 },\r\n  { opacity: 1, duration: .75, y: 0, ease: \"power1.out\", stagger: .7 }\r\n);\r\n\r\n/* STARRY BG ANIMATION  */\r\n\r\nconst canvas = document.getElementById(\"canvas\");\r\nconst c = canvas.getContext(\"2d\");\r\n\r\nlet w;\r\nlet h;\r\n\r\nconst setCanvasExtents = () => {\r\n  w = document.body.clientWidth;\r\n  h = document.body.clientHeight;\r\n  canvas.width = w;\r\n  canvas.height = h;\r\n};\r\n\r\nsetCanvasExtents();\r\n\r\nwindow.onresize = () => {\r\n  setCanvasExtents();\r\n};\r\n\r\nconst makeStars = count => {\r\n  const out = [];\r\n  for (let i = 0; i < count; i++) {\r\n    const s = {\r\n      x: Math.random() * 1600 - 800,\r\n      y: Math.random() * 900 - 450,\r\n      z: Math.random() * 1000\r\n    };\r\n    out.push(s);\r\n  }\r\n  return out;\r\n};\r\n\r\nlet stars = makeStars(10000);\r\nlet myGradient = c.createLinearGradient(0, 2000, 0, -600);\r\nmyGradient.addColorStop(0, '#002547');\r\nmyGradient.addColorStop(1, '#124982');\r\n\r\nconst clear = () => {\r\n  c.fillStyle = myGradient;\r\n  c.fillRect(0, 0, canvas.width, canvas.height);\r\n};\r\n\r\nconst putPixel = (x, y, brightness) => {\r\n  const intensity = brightness * 255;\r\n  const rgb = \"rgb(\" + intensity + \",\" + intensity + \",\" + intensity + \")\";\r\n  c.fillStyle = rgb;\r\n  c.fillRect(x, y, 1, 1);\r\n};\r\n\r\nconst moveStars = distance => {\r\n  const count = stars.length;\r\n  for (var i = 0; i < count; i++) {\r\n    const s = stars[i];\r\n    s.z -= distance;\r\n    while (s.z <= 1) {\r\n      s.z += 500;\r\n    }\r\n  }\r\n};\r\n\r\nlet prevTime;\r\nconst init = time => {\r\n  prevTime = time;\r\n  requestAnimationFrame(tick);\r\n};\r\n\r\nconst tick = time => {\r\n  let elapsed = time - prevTime;\r\n  prevTime = time;\r\n\r\n  moveStars(elapsed * 0.05);\r\n\r\n  clear();\r\n\r\n  const cx = w / 2;\r\n  const cy = h / 2;\r\n\r\n  const count = stars.length;\r\n  for (var i = 0; i < count; i++) {\r\n    const star = stars[i];\r\n\r\n    const x = cx + star.x / (star.z * 0.001);\r\n    const y = cy + star.y / (star.z * 0.001);\r\n\r\n    if (x < 0 || x >= w || y < 0 || y >= h) {\r\n      continue;\r\n    }\r\n\r\n    const d = star.z / 1000.0;\r\n    const b = 1 - d * d;\r\n\r\n    putPixel(x, y, b);\r\n  }\r\n\r\n  requestAnimationFrame(tick);\r\n};\r\n\r\nrequestAnimationFrame(init);\r\n"]}